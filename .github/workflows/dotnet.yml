name: .NET

on:
  pull_request:
    branches: [ main, development, staging ]
    tags:
      - '*'

jobs:

  buildUbuntuDev: 
    runs-on: ubuntu-latest
    if: github.base_ref == 'development'
    environment: 
      name: Development
      url: https://github.com/Potatismoose/Parkeringshuset/tree/development
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
  buildMatrixStaging:
    runs-on: ${{ matrix.os }}
    if: github.base_ref == 'staging'
    strategy: 
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    environment: 
      name: Staging
      url: https://github.com/Potatismoose/Parkeringshuset/tree/staging
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore      
      
  testDev:
      needs: buildUbuntuDev
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: UnitTests
        run: dotnet test --verbosity normal --filter TestCategory='UnitTests'
        
  create_pull_request:
      needs: buildMatrixStaging
      runs-on: ubuntu-latest
      steps: 
        - uses: actions/checkout@v2
        - name: Create Pull Request
          uses: peter-evans/create-pull-request@v3.10.1
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            commit-message: Auto Pull Request
            title: Your desired title
            body: Auto-created Pull Request
            branch: ${{ github.ref }} # The branch where you commit
            base: main # Don't forget to specify the right base branch here        

# solution for the release job: https://stackoverflow.com/questions/60963759/use-github-actions-to-create-a-tag-but-not-a-release
  release:
    if: github.base_ref == 'main'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Checkout branch "main"
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Release snapshot
        id: release-snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Version ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
